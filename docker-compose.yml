services:
  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
 
  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
      - "9093:9093"
    expose:
      - '29092'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:29092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:29092,EXTERNAL://localhost:9093
    depends_on:
      - zookeeper

  init-kafka:
    image: "docker.io/bitnami/zookeeper:3"
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
        bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --topic factory-sensors-presence --partitions 3 --replication-factor 1
      "

  manager:
    build: ./iot-manager
    depends_on:
      - init-kafka
    ports:
      - 3000:3000
    command: npm start run

  sensor1:
    build: ./iot-sensor
    environment:
      - SENSOR_ID=1
    command: npm start run
    depends_on:
      - init-kafka

  sensor2:
    build: ./iot-sensor
    environment:
      - SENSOR_ID=2
    command: npm start run
    depends_on:
      - init-kafka

  sensor3:
    build: ./iot-sensor
    environment:
      - SENSOR_ID=3
    command: npm start run
    depends_on:
      - init-kafka

  sensor4:
    build: ./iot-sensor
    environment:
      - SENSOR_ID=4
    command: npm start run    
    depends_on:
      - init-kafka